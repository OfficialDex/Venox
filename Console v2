local scrollingFrame = script.Parent
local loggingEnabled = false

if not scrollingFrame:FindFirstChildOfClass("UIListLayout") then
    local uiListLayout = Instance.new("UIListLayout")
    uiListLayout.Parent = scrollingFrame
end

local function createLogLabel(message)
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 0, 20)  -- Adjust size as needed
    textLabel.BackgroundTransparency = 1
    textLabel.Text = message
    textLabel.TextWrapped = true
    textLabel.Parent = scrollingFrame

    -- Adjust CanvasSize to fit all labels
    scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, scrollingFrame.UIListLayout.AbsoluteContentSize.Y)
end

local function logMessage(message)
    createLogLabel(message)
end

local function logError(errorMessage)
    logMessage("[Error]: " .. errorMessage)
end

local function logWarning(warningMessage)
    logMessage("[Warning]: " .. warningMessage)
end

local function logOutput(outputMessage)
    logMessage("[Output]: " .. outputMessage)
end

game:GetService("LogService").MessageOut:Connect(function(message, messageType)
    if not loggingEnabled then return end

    if messageType == Enum.MessageType.MessageError then
        logError(message)
    elseif messageType == Enum.MessageType.MessageWarning then
        logWarning(message)
    else
        logOutput(message)
    end
end)

task.delay(4, function()
    loggingEnabled = true
end)
