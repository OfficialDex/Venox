local textBox = script.Parent

local patterns = {
    {pattern = "%-%-[^\n]*", color = "008000"},
    {pattern = "%[%[.-%]%]", color = "008000"},
    {pattern = "\".-\"", color = "A31515"},
    {pattern = "\'.-\'", color = "A31515"},
    {pattern = "%d+", color = "FF8C00"},
    {pattern = "[%+%-%*/%%]", color = "0000FF"},
    {pattern = "%f[%w_]and%f[%W_]", color = "0000FF"},
    {pattern = "%f[%w_]break%f[%W_]", color = "0000FF"},
    {pattern = "%f[%w_]do%f[%W_]", color = "0000FF"},
    {pattern = "%f[%w_]else%f[%W_]", color = "0000FF"},
    {pattern = "%f[%w_]elseif%f[%W_]", color = "0000FF"},
    {pattern = "%f[%w_]end%f[%W_]", color = "0000FF"},
    {pattern = "%f[%w_]false%f[%W_]", color = "0000FF"},
    {pattern = "%f[%w_]for%f[%W_]", color = "0000FF"},
    {pattern = "%f[%w_]function%f[%W_]", color = "0000FF"},
    {pattern = "%f[%w_]if%f[%W_]", color = "0000FF"},
    {pattern = "%f[%w_]in%f[%W_]", color = "0000FF"},
    {pattern = "%f[%w_]local%f[%W_]", color = "0000FF"},
    {pattern = "%f[%w_]nil%f[%W_]", color = "0000FF"},
    {pattern = "%f[%w_]not%f[%W_]", color = "0000FF"},
    {pattern = "%f[%w_]or%f[%W_]", color = "0000FF"},
    {pattern = "%f[%w_]repeat%f[%W_]", color = "0000FF"},
    {pattern = "%f[%w_]return%f[%W_]", color = "0000FF"},
    {pattern = "%f[%w_]then%f[%W_]", color = "0000FF"},
    {pattern = "%f[%w_]true%f[%W_]", color = "0000FF"},
    {pattern = "%f[%w_]until%f[%W_]", color = "0000FF"},
    {pattern = "%f[%w_]while%f[%W_]", color = "0000FF"},
}

local function applySyntaxHighlighting(text)
    for _, patternInfo in ipairs(patterns) do
        text = text:gsub(patternInfo.pattern, function(word)
            return string.format('<font color="#%s">%s</font>', patternInfo.color, word)
        end)
    end
    return text
end

local function updateText()
    textBox.Text = applySyntaxHighlighting(textBox.Text)
end

textBox:GetPropertyChangedSignal("Text"):Connect(updateText)
